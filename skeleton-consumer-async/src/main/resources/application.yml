
server:
  port: 8090

spring:
  application:
    name: kafka-consumer-async

  cloud:
    stream:
      default:
        consumer:
          useNativeDecoding: true

      bindings:
        messageConsumer-in-0:
          consumer:
            maxAttempts: 5 # Quantidade de retentativas para consumir mensagens
            backOffInitialInterval: 1000 # O intervalo inicial entre as tentativas ser치 de 1 segundo
            backOffMultiplier: 2 # O intervalo entre tentativas aumentar치 exponencialmente com um multiplicador de 2
            backOffMaxInterval: 10000 # O intervalo m치ximo entre tentativas ser치 de 10 segundos
          destination: skeleton-send-message
          group: my-group
          content-type: application/*+avro

      kafka:
        binder:
          consumer-properties:
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            schema.registry.url: http://localhost:8081
            specific.avro.reader: true

remote:
  external-service-api:
    url: http://localhost:8091

topic:
  name: skeleton-send-message
